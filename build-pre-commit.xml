<?xml version="1.0" encoding="UTF-8"?>

<project name="Yubikey API Client Bundle-pre-commit" default="build">

    <target name="build"
            depends="prepare-environment,php-lint,phpmd,phpcs,php-license,phpunit"/>

    <target name="prepare-environment" depends="set-test-tree-location,get-changeset">
        <echo message="OK"/>
    </target>

    <target name="get-changeset"
            depends="get-changeset.php,get-changeset.php-spacesep,get-changeset.php-commasep"/>

    <target name="get-changeset.php" depends="set-test-tree-location" unless="changeset.php.executed">
        <property name="changeset.php.executed" value="true"/>

        <!-- Get changeset separated by newline -->
        <exec executable="${basedir}/vendor/bin/qa-tools" outputProperty="changeset.php.newlinesep">
            <arg line="changeset:pre-commit --filter-path=src --filter-ext=php"/>
        </exec>

        <!-- Check if changeset contains values -->
        <condition property="changeset.php.notempty">
            <not>
                <equals arg1="${changeset.php.newlinesep}" arg2="" trim="true"/>
            </not>
        </condition>
    </target>

    <!-- Assign changeset absolute filenames to property and quote filenames -->
    <target name="get-changeset.php-absolute.newlinesep" depends="get-changeset.php" if="changeset.php.notempty">
        <loadresource property="changeset.php.absolute.newlinesep">
            <propertyresource name="changeset.php.newlinesep"/>
            <filterchain>
                <tokenfilter>
                    <linetokenizer/>
                    <replaceregex pattern="^" replace='"${test-tree-location}/'/>
                    <replaceregex pattern="$" replace='"'/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </target>

    <!-- Assign changeset relative and quote filenames -->
    <target name="get-changeset.php-relative.newlinesep" depends="get-changeset.php" if="changeset.php.notempty">
        <loadresource property="changeset.php.relative.newlinesep">
            <propertyresource name="changeset.php.newlinesep"/>
            <filterchain>
                <tokenfilter>
                    <linetokenizer/>
                    <replaceregex pattern="^" replace='"'/>
                    <replaceregex pattern="$" replace='"'/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </target>

    <!-- Convert newline separated to space separated -->
    <target name="get-changeset.php-spacesep" depends="get-changeset.php-relative.newlinesep,get-changeset.php-absolute.newlinesep"
            if="changeset.php.notempty">
        <loadresource property="changeset.php.relative.spacesep">
            <propertyresource name="changeset.php.relative.newlinesep"/>
            <filterchain>
                <tokenfilter delimoutput=" "/>
            </filterchain>
        </loadresource>
        <loadresource property="changeset.php.absolute.spacesep">
            <propertyresource name="changeset.php.absolute.newlinesep"/>
            <filterchain>
                <tokenfilter delimoutput=" "/>
            </filterchain>
        </loadresource>
    </target>

    <!-- Convert newline separated to comma separated -->
    <target name="get-changeset.php-commasep" depends="get-changeset.php-relative.newlinesep,get-changeset.php-absolute.newlinesep"
            if="changeset.php.notempty">
        <loadresource property="changeset.php.relative.commasep">
            <propertyresource name="changeset.php.relative.newlinesep"/>
            <filterchain>
                <tokenfilter delimoutput=","/>
            </filterchain>
        </loadresource>
        <loadresource property="changeset.php.absolute.commasep">
            <propertyresource name="changeset.php.absolute.newlinesep"/>
            <filterchain>
                <tokenfilter delimoutput=","/>
            </filterchain>
        </loadresource>
    </target>

    <target name="set-test-tree-location">
        <condition value="${working-dir}" else="${basedir}" property="test-tree-location">
            <isset property="working-dir"/>
        </condition>
    </target>

    <target name="php-lint" depends="get-changeset.php-absolute.newlinesep" if="changeset.php.notempty">
        <exec executable="sh" failonerror="true">
            <arg value="-c"/>
            <arg value="echo '${changeset.php.absolute.newlinesep}' | xargs -n 1 -P 4 php -l 1>/dev/null"/>
        </exec>
        <echo message="OK"/>
    </target>

    <target name="phpmd" depends="get-changeset.php-commasep" if="changeset.php.notempty">
        <exec executable="${test-tree-location}/vendor/bin/phpmd" failonerror="true">
            <arg line="src text ${test-tree-location}/phpmd-pre-commit.xml"/>
            <arg value="--exclude"/>
            <arg value="*/Tests/*"/>
        </exec>
        <echo message="OK"/>
    </target>

    <target name="phpcs" depends="get-changeset.php-spacesep" if="changeset.php.notempty">
        <exec executable="${test-tree-location}/vendor/bin/phpcs" failonerror="true">
            <arg value="--standard=${test-tree-location}/phpcs.xml"/>
            <arg value="--warning-severity=0"/> <!-- Don't show warnings-->
            <arg value="--extensions=php"/>
            <arg value="--report=full"/>
            <arg line="${changeset.php.absolute.spacesep}"/>
        </exec>
        <echo message="OK"/>
    </target>

    <target name="php-license" depends="get-changeset.php-spacesep" if="changeset.php.notempty">
        <exec executable="/bin/grep" failonerror="true" outputproperty="php-license.grep.output">
            <arg value="-L"/>
            <arg value="LICENSE-2.0"/>
            <arg line="${changeset.php.absolute.spacesep}"/>
        </exec>
        <echo message="${php-license.grep.output}"/>
        <fail message="License header missing">
            <condition>
                <or>
                    <not><equals arg1="${php-license.grep.output}" arg2=""/></not>
                    <not><isset property="php-license.grep.output"/></not>
                </or>
            </condition>
        </fail>
        <echo message="OK"/>
    </target>

    <!--
        PHPUnit always runs, regardless of there being changes in PHP src.
        This is because other changes, e.g. config, can also break tests
    -->
    <target name="phpunit" depends="set-test-tree-location">
        <exec outputproperty="phpunit-output-raw" resultproperty="phpunit-exitcode"
              executable="${test-tree-location}/vendor/bin/phpunit" failonerror="false">
            <arg line="--configuration=${test-tree-location}/ --stop-on-failure"/>
        </exec>
        <condition property="phpunit-output" value="${phpunit-output-raw}" else="OK">
            <isfailure code="${phpunit-exitcode}"/>
        </condition>
        <echo message="${phpunit-output}"/>
        <fail message="PHPUnit failed">
            <condition>
                <isfailure code="${phpunit-exitcode}"/>
            </condition>
        </fail>
    </target>

</project>
